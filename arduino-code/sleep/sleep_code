// // sleep sucks
// void setupSleep()
// {
//     // Configure wake-up sources
//     esp_sleep_enable_timer_wakeup(60 * 1000000); // 60 seconds in microseconds

//     // Use negative edge trigger (1->0) for touch wakeup
//     esp_err_t touch_wakeup = esp_sleep_enable_ext0_wakeup(GPIO_NUM_13, 0);
//     if (touch_wakeup != ESP_OK)
//     {
//         Serial.printf("Failed to enable touch wakeup: %d\n", touch_wakeup);
//     }

//     // Add debug print before configuring WiFi
//     Serial.printf("TOUCH_INT state: %d\n", digitalRead(TOUCH_INT));
// }


// void loop()
// {
//     static unsigned long lastUpdate = 0;
//     static unsigned long lastTouchUpdate = 0;
//     static bool firstRun = true;
//     static bool touchActive = false;
//     static int16_t x, y;

//     const unsigned long TOUCH_DEBOUNCE_TIME = 2000;
//     const unsigned long FIRST_RUN_DELAY = 1000;

//     unsigned long currentTime = millis();

//     // Handle first run
//     if (firstRun && (currentTime >= FIRST_RUN_DELAY))
//     {
//         if (update_display(framebuffer, elementManager, false))
//         {
//             firstRun = false;
//             lastUpdate = currentTime;
//         }
//         return;
//     }

//     bool shouldUpdate = false;

//     // Check wake-up reason
//     esp_sleep_wakeup_cause_t wakeup_reason = esp_sleep_get_wakeup_cause();
//     switch (wakeup_reason)
//     {
//     case ESP_SLEEP_WAKEUP_TIMER:
//         shouldUpdate = true;
//         break;
//     case ESP_SLEEP_WAKEUP_EXT0: // Changed from ESP_SLEEP_WAKEUP_TOUCHPAD
//         if (touch.getPoint(&x, &y))
//         {
//             Serial.printf("Touch detected at X:%d Y:%d\n", x, y);
//             shouldUpdate = elementManager.handleTouch(x, y, framebuffer);
//         }
//         break;
//     default:
//         break;
//     }

//     if (wakeup_reason != ESP_SLEEP_WAKEUP_UNDEFINED)
//     {
//         Serial.print("Woke up from sleep. Reason: ");
//         switch (wakeup_reason)
//         {
//         case ESP_SLEEP_WAKEUP_TIMER:
//             Serial.println("Timer");
//             break;
//         case ESP_SLEEP_WAKEUP_EXT0: // Changed from ESP_SLEEP_WAKEUP_TOUCHPAD
//             Serial.println("Touchpad");
//             break;
//         default:
//             Serial.println("Other");
//             break;
//         }
//     }

//     // Handle web server requests
//     webServer.handle();

//     // Update display if needed
//     if (shouldUpdate || refreshRequested)
//     {
//         if (update_display(framebuffer, elementManager, false))
//         {
//             lastUpdate = currentTime;
//         }
//         refreshRequested = false;
//     } else {
//         // Only enter sleep if pin is in expected state
//         int touchState = digitalRead(TOUCH_INT);
//         Serial.printf("TOUCH_INT state before sleep: %d\n", touchState);

//         if (touchState == HIGH) {  // Only sleep if pin is HIGH (no touch active)
//             Serial.println("Entering light sleep mode...");
//             esp_light_sleep_start();
//         } else {
//             Serial.println("Skipping sleep - touch pin is LOW");
//             delay(100);  // Small delay before checking again
//         }
//     }
// }